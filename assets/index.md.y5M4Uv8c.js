import{_ as i,c as t,ag as r,G as o,j as e,a as n,B as d,o as s}from"./chunks/framework.DJOU-58h.js";const x=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md"}'),h={name:"index.md"};function u(c,a,_,P,m,p){const l=d("BulkDataPush");return s(),t("div",null,[a[0]||(a[0]=r('<h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>对比各个表格的性能，包括AG Grid、TanStack Table等主流表格组件，通过统一的基准测试来评估它们在不同场景下的性能表现。</p><h3 id="测试环境" tabindex="-1">测试环境 <a class="header-anchor" href="#测试环境" aria-label="Permalink to &quot;测试环境&quot;">​</a></h3><ul><li>操作系统：Windows 11</li><li>内存：32GB</li><li>CPU：AMD R5 3600</li><li>GPU：AMD Radeon RX 580 2048SP</li><li>测试框架：Playwright</li><li>浏览器：Chromium 131.0.6778.33</li></ul><h2 id="_06-数据推送测试" tabindex="-1">06 数据推送测试 <a class="header-anchor" href="#_06-数据推送测试" aria-label="Permalink to &quot;06 数据推送测试&quot;">​</a></h2><h3 id="测试说明" tabindex="-1">测试说明 <a class="header-anchor" href="#测试说明" aria-label="Permalink to &quot;测试说明&quot;">​</a></h3><ul><li>数据量：10,000条记录</li><li>测试内容：模拟实时数据更新场景，每次推送固定数量的数据，测试表格的渲染性能</li><li>测试指标： <ul><li>CPU时间：完成数据渲染所需的CPU处理时间（毫秒）</li><li>渲染时间：从开始推送数据到完成渲染的总时间（毫秒）</li></ul></li></ul><h3 id="测试结果" tabindex="-1">测试结果 <a class="header-anchor" href="#测试结果" aria-label="Permalink to &quot;测试结果&quot;">​</a></h3><p>下表展示了各个表格组件在处理大量数据推送时的性能表现：</p>',9)),o(l),a[1]||(a[1]=e("h3",{id:"结果说明",tabindex:"-1"},[n("结果说明 "),e("a",{class:"header-anchor",href:"#结果说明","aria-label":'Permalink to "结果说明"'},"​")],-1)),a[2]||(a[2]=e("ul",null,[e("li",null,"CPU时间：反映了组件在数据处理和渲染上的CPU资源消耗"),e("li",null,"渲染时间：反映了用户实际感知到的响应速度"),e("li",null,"数值越低表示性能越好")],-1))])}const b=i(h,[["render",u]]);export{x as __pageData,b as default};
